{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.2.5.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account type which determines data redundancy and underlying drive type"
      }
    },
    "deploymentType": {
      "type": "string",
      "defaultValue": "Cluster",
      "allowedValues": [
        "Standalone",
        "Cluster"
      ],
      "metadata": {
        "description": "Splunk deployment type"
      }
    },
    "standaloneVmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Size of standalone VM"
      }
    },
    "clusterMasterVmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Size of cluster master VM"
      }
    },
    "deployServerVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Size of the Deploy Server VMs"
      }
    },
    "clusterSearchheadVmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Size of cluster search head VM"
      }
    },
    "clusterIndexerVmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Size of cluster indexer VM"
      }
    },
    "clusterIndexerVmCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 3,
      "maxValue": 30,
      "metadata": {
        "description": "Count of indexer nodes"
      }
    },
    "clusterSecret": {
      "type": "securestring",
      "defaultValue": "Pmc8520Pmc8520",
      "metadata": {
        "description": "Security key for authentication between cluster nodes (when applicable)"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "vcdx244",
      "metadata": {
        "description": "Username for the VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Pmc8520Pmc8520",
      "metadata": {
        "description": "Password for the VMs"
      }
    },
    "splunkAdminPassword": {
      "type": "securestring",
      "defaultValue": "Pmc8520Pmc8520",
      "metadata": {
        "description": "Password for Splunk admin"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "fnfsplunk",
      "metadata": {
        "description": "Name of the virtual network that the consumer wants to use"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of resource group of existing Virtual Network (if applicable)"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual network address CIDR"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "shsubnet",
      "metadata": {
        "description": "Subnet for the Search Head"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "idxsubnet",
      "metadata": {
        "description": "Subnet for the Indexers"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Search Head subnet CIDR"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Indexer subnet CIDR"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "10.0.0.20",
      "metadata": {
        "description": "Search Head subnet start address"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "10.0.1.20",
      "metadata": {
        "description": "Indexer subnet start address"
      }
    },
    "sshFrom": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "CIDR block from which SSH access is allowed (default is ssh access from anywhere)"
      }
    },
    "forwardedDataFrom": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "CIDR block from which forwarded data is allowed (default is data can be received from anywhere)"
      }
    },
    "domainNamePrefix": {
      "type": "string",
      "defaultValue": "fnfsplunk",
      "metadata": {
        "description": "Prefix for domain name to access Splunk which is in the format: {prefix}.{location}.cloudapp.azure.com e.g. mysplunk.westus.cloudapp.azure.com. Prefix should match the following regular expression ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "publicIPName": {
      "type": "string",
      "defaultValue": "splunksh-publicip",
      "metadata": {
        "description": "Name of the Search Head public IP address"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "fnfsplunklb",
      "metadata": {
        "description": "This is the name of the load balancer"
      }
    },
    "storageAccountNameLoadBalancer": {
      "type": "string",
      "defaultValue": "fnfsplunklbstorage",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "templateLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/paulcradduck/Splunk-Azure/master/",
      "metadata": {
        "description": "Template file location",
        "artifactsBaseUrl": "Base URL of the Publisher Template gallery package"
      }
    }
  },
  "variables": {
    "templateAPIVersion": "2015-01-01",
    "resourceAPIVersion": "2015-06-15",
    "storageAccountNamePrefix": "[concat(uniqueString(resourceGroup().id, deployment().name), 'splunk')]",
    "templateBaseUrl": "[concat(parameters('templateLocation'), '/')]",
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'shared-resources.json')]",
    "virtualNetworkTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'vnet-', parameters('virtualNetworkNewOrExisting'), '.json')]",
    "emptyTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'empty-resources.json')]",
    "nodesPerStorageAccount": 4,
    "tshirtSizeStandalone": {
      "standaloneVmSize": "[parameters('standaloneVmSize')]",
      "clusterMasterVmSize": "",
      "clusterSearchheadVmSize": "",
      "clusterIndexerVmSize": "",
      "deployServerVmSize": "",
      "diskSize": 1023,
      "standaloneTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'standalone-instance-resources.json')]",
      "clusterMasterTemplateUrl": "[variables('emptyTemplateUrl')]",
      "clusterSearchheadTemplateUrl": "[variables('emptyTemplateUrl')]",
      "clusterPeersTemplateUrl": "[variables('emptyTemplateUrl')]",
      "deployServerTemplateUrl": "[variables('emptyTemplateUrl')]",
      "clusterPeersCount": 0,
      "availabilitySetCount": 1,
      "publicIPAddress": {
        "name": "[parameters('publicIPName')]",
        "domainNamePrefix": "[parameters('domainNamePrefix')]",
        "count": 1,
        "map": [
          ""
        ]
      },
      "storage": {
        "name": "[variables('storageAccountNamePrefix')]",
        "type": "[parameters('storageAccountType')]",
        "count": 1,
        "map": [
          0
        ]
      }
    },
    "tshirtSizeCluster": {
      "standaloneVmSize": "",
      "clusterMasterVmSize": "[parameters('clusterMasterVmSize')]",
      "clusterSearchheadVmSize": "[parameters('clusterSearchheadVmSize')]",
      "clusterIndexerVmSize": "[parameters('clusterIndexerVmSize')]",
      "deployServerVmSize": "[parameters('clusterIndexerVmSize')]",
      "diskSize": 1023,
      "standaloneTemplateUrl": "[variables('emptyTemplateUrl')]",
      "clusterMasterTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'clustermaster-resources.json')]",
      "deployServerTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'deployserver-resources.json')]",
      "clusterSearchheadTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'clustersearchhead-resources.json')]",
      "clusterPeersTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'clusterpeers-resources.json')]",
      "clusterPeersCount": "[parameters('clusterIndexerVmCount')]",
      "availabilitySetCount": 3,
      "publicIPAddress": {
        "name": "[parameters('publicIPName')]",
        "domainNamePrefix": "[parameters('domainNamePrefix')]",
        "count": "[add(2, parameters('clusterIndexerVmCount'))]",
        "map": [
          "",
          "-cm",
          "-cp0",
          "-cp1",
          "-cp2",
          "-cp3",
          "-cp4",
          "-cp5",
          "-cp6",
          "-cp7",
          "-cp8",
          "-cp9",
          "-cp10",
          "-cp11",
          "-cp12",
          "-cp13",
          "-cp14",
          "-cp15",
          "-cp16",
          "-cp17",
          "-cp18",
          "-cp19",
          "-cp20",
          "-cp21",
          "-cp22",
          "-cp23",
          "-cp24",
          "-cp25",
          "-cp26",
          "-cp27",
          "-cp28",
          "-cp29",
          "-cp30"
        ]
      },
      "storage": {
        "name": "[variables('storageAccountNamePrefix')]",
        "type": "[parameters('storageAccountType')]",
        "count": "[div(sub(add(add(2, parameters('clusterIndexerVmCount')), variables('nodesPerStorageAccount')), 1), variables('nodesPerStorageAccount'))]",
        "map": [
          0,
          1,
          1,
          0,
          1,
          1,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          4,
          4,
          4,
          4,
          5,
          5,
          5,
          5,
          6,
          6,
          6,
          6,
          7,
          7,
          7,
          7
        ]
      }
    },
    "tshirtSize": "[variables(concat('tshirtSize', parameters('deploymentType')))]",
    "sa2": "[parameters('subnet2StartAddress')]",
    "sa3": "[parameters('subnet1StartAddress')]",
    "ipOctet01": "[concat(split(variables('sa2'), '.')[0], '.', split(variables('sa2'), '.')[1], '.')]",
    "ipOctet2": "[int(split(variables('sa2'), '.')[2])]",
    "ipOctet3": "[int(split(variables('sa2'), '.')[3])]",
    "ipOctet001": "[concat(split(variables('sa3'), '.')[0], '.', split(variables('sa3'), '.')[1], '.')]",
    "ipOctet02": "[int(split(variables('sa3'), '.')[2])]",
    "ipOctet03": "[int(split(variables('sa3'), '.')[3])]",
    "networkSettings": {
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "virtualNetworkExistingRGName": "[parameters('virtualNetworkExistingRGName')]",
      "virtualNetworkAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
      "subnet": {
        "sh": {
          "name": "[parameters('subnet1Name')]",
          "prefix": "[parameters('subnet1Prefix')]",
          "vnet": "[parameters('virtualNetworkName')]"
        },
        "idx": {
          "name": "[parameters('subnet2Name')]",
          "prefix": "[parameters('subnet2Prefix')]",
          "vnet": "[parameters('virtualNetworkName')]"
        }
      },
      "statics": {
        "standaloneIp": "[parameters('subnet1StartAddress')]",
        "clusterSearchheadIp": "[parameters('subnet1StartAddress')]",
        "clusterMasterIp": "[parameters('subnet2StartAddress')]",
        "indexerIps": {
          "ipOctet01": "[variables('ipOctet01')]",
          "ipOctet2": "[add(variables('ipOctet2'), div(add(variables('ipOctet3'), 1), 255))]",
          "ipOctet3": "[mod(add(variables('ipOctet3'), 1), 255)]"
        },
        "deployServerIps": {
          "ipOctet01": "[variables('ipOctet001')]",
          "ipOctet2": "[add(variables('ipOctet02'), div(add(variables('ipOctet03'), 1), 255))]",
          "ipOctet3": "[mod(add(variables('ipOctet03'), 1), 255)]"
        }
      }
    },
    "availabilitySetSettings": {
      "name": "[concat(parameters('virtualNetworkName'), '-aset')]",
      "count": "[variables('tshirtSize').availabilitySetCount]",
      "fdCount": 3,
      "udCount": 5
    },
    "osSettings": {
      "imageReference": {
        "publisher": "splunk",
        "offer": "splunk-enterprise-base-image",
        "sku": "splunk-on-ubuntu-14-04-lts",
        "version": "1.1.1"
      },
      "scripts": [
        "[concat(variables('templateBaseUrl'), 'scripts/', 'vm-disk-utils-0.1.sh')]",
        "[concat(variables('templateBaseUrl'), 'scripts/', 'node-setup.sh')]"
      ]
    },
    "vnetId-new": "[concat(resourceGroup().id, '/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]",
    "vnetId-existing": "[resourceId(parameters('virtualNetworkExistingRGName'),'Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]",
    "vnetId": "[variables(concat('vnetId-', parameters('virtualNetworkNewOrExisting')))]",
    "subnet1Ref": "[concat(variables('vnetId'),'/subnets/',parameters('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetId'),'/subnets/',parameters('subnet2Name'))]",
    "providerGuid": "[toUpper('7d69ff10-1a05-4353-b69d-0e87c3382e96')]",
    "storageAccountType": "Standard_LRS",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]"
  },
  "resources": [
    {
      "name": "shared",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "availabilitySetSettings": {
            "value": "[variables('availabilitySetSettings')]"
          },
          "publicIPAddressSettings": {
            "value": "[variables('tshirtSize').publicIPAddress]"
          },
          "storageSettings": {
            "value": "[variables('tshirtSize').storage]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "name": "virtual-network",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "standalone-deployment",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]",
        "[concat('Microsoft.Resources/deployments/', 'virtual-network')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('tshirtSize').standaloneTemplateUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namespace": {
            "value": "standalone"
          },
          "machineSettings": {
            "value": {
              "vmSize": "[variables('tshirtSize').standaloneVmSize]",
              "diskSize": "[variables('tshirtSize').diskSize]",
              "staticIp": "[variables('networkSettings').statics.standaloneIp]",
              "clusterMasterIp": "NA",
              "publicIPName": "[concat(variables('tshirtSize').publicIPAddress.name, '')]",
              "sshFrom": "[concat(parameters('sshFrom'), '')]",
              "forwardedDataFrom": "[concat(parameters('forwardedDataFrom'), '')]",
              "availabilitySet": "[concat(variables('availabilitySetSettings').name, '0')]"
            }
          },
          "storageSettings": {
            "value": "[variables('tshirtSize').storage]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "splunkAdminPassword": {
            "value": "[parameters('splunkAdminPassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet": {
            "value": "[variables('subnet1Ref')]"
          },
          "templateBaseUrl": {
            "value": "[concat(variables('templateBaseUrl'), 'nested/')]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "clustermaster-deployment",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]",
        "[concat('Microsoft.Resources/deployments/', 'virtual-network')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('tshirtSize').clusterMasterTemplateUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namespace": {
            "value": "cm"
          },
          "machineSettings": {
            "value": {
              "vmSize": "[variables('tshirtSize').clusterMasterVmSize]",
              "diskSize": "[variables('tshirtSize').diskSize]",
              "staticIp": "[variables('networkSettings').statics.clusterMasterIp]",
              "clusterMasterIp": "NA",
              "publicIPName": "[concat(variables('tshirtSize').publicIPAddress.name, '-cm')]",
              "sshFrom": "[concat(parameters('sshFrom'), '')]",
              "availabilitySet": "[concat(variables('availabilitySetSettings').name, '0')]"
            }
          },
          "storageSettings": {
            "value": "[variables('tshirtSize').storage]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "splunkAdminPassword": {
            "value": "[parameters('splunkAdminPassword')]"
          },
          "clusterSecret": {
            "value": "[parameters('clusterSecret')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet": {
            "value": "[variables('subnet2Ref')]"
          },
          "templateBaseUrl": {
            "value": "[concat(variables('templateBaseUrl'), 'nested/')]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "clustersearchhead-deployment",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]",
        "[concat('Microsoft.Resources/deployments/', 'virtual-network')]",
        "[concat('Microsoft.Resources/deployments/', 'clustermaster-deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('tshirtSize').clusterSearchheadTemplateUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namespace": {
            "value": "csh"
          },
          "machineSettings": {
            "value": {
              "vmSize": "[variables('tshirtSize').clusterSearchheadVmSize]",
              "diskSize": "[variables('tshirtSize').diskSize]",
              "staticIp": "[variables('networkSettings').statics.clusterSearchheadIp]",
              "clusterMasterIp": "[variables('networkSettings').statics.clusterMasterIp]",
              "publicIPName": "[concat(variables('tshirtSize').publicIPAddress.name, '')]",
              "sshFrom": "[concat(parameters('sshFrom'), '')]",
              "availabilitySet": "[concat(variables('availabilitySetSettings').name, '1')]"
            }
          },
          "storageSettings": {
            "value": "[variables('tshirtSize').storage]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "splunkAdminPassword": {
            "value": "[parameters('splunkAdminPassword')]"
          },
          "clusterSecret": {
            "value": "[parameters('clusterSecret')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet": {
            "value": "[variables('subnet1Ref')]"
          },
          "templateBaseUrl": {
            "value": "[concat(variables('templateBaseUrl'), 'nested/')]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "deployServer-deployment",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]",
        "[concat('Microsoft.Resources/deployments/', 'virtual-network')]",
        "[concat('Microsoft.Resources/deployments/', 'clustermaster-deployment')]",
        "[concat('Microsoft.Resources/deployments/', 'clustersearchhead-deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('tshirtSize').deployServerTemplateUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namespace": {
            "value": "ds"
          },
          "machineSettings": {
            "value": {
              "vmSize": "[variables('tshirtSize').deployServerVmSize]",
              "diskSize": 100,
              "staticIps": "[variables('networkSettings').statics.deployServerIps]",
              "clusterMasterIp": "[variables('networkSettings').statics.clusterMasterIp]",
              "publicIPName": "[concat(variables('tshirtSize').publicIPAddress.name, '-ds')]",
              "sshFrom": "[concat(parameters('sshFrom'), '')]",
              "availabilitySet": "[concat(variables('availabilitySetSettings').name, '1')]"
            }
          },
          "storageSettings": {
            "value": "[variables('tshirtSize').storage]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "splunkAdminPassword": {
            "value": "[parameters('splunkAdminPassword')]"
          },
          "clusterSecret": {
            "value": "[parameters('clusterSecret')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet": {
            "value": "[variables('subnet1Ref')]"
          },
          "templateBaseUrl": {
            "value": "[concat(variables('templateBaseUrl'), 'nested/')]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "clusterpeers-deployment",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]",
        "[concat('Microsoft.Resources/deployments/', 'virtual-network')]",
        "[concat('Microsoft.Resources/deployments/', 'clustermaster-deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('tshirtSize').clusterPeersTemplateUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namespace": {
            "value": "cp"
          },
          "machineSettings": {
            "value": {
              "vmSize": "[variables('tshirtSize').clusterIndexerVmSize]",
              "vmCount": "[variables('tshirtSize').clusterPeersCount]",
              "diskSize": "[variables('tshirtSize').diskSize]",
              "staticIps": "[variables('networkSettings').statics.indexerIps]",
              "clusterMasterIp": "[variables('networkSettings').statics.clusterMasterIp]",
              "publicIPName": "[concat(variables('tshirtSize').publicIPAddress.name, '-cp')]",
              "sshFrom": "[concat(parameters('sshFrom'), '')]",
              "forwardedDataFrom": "[concat(parameters('forwardedDataFrom'), '')]",
              "availabilitySet": "[concat(variables('availabilitySetSettings').name, '2')]"
            }
          },
          "storageSettings": {
            "value": "[variables('tshirtSize').storage]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "splunkAdminPassword": {
            "value": "[parameters('splunkAdminPassword')]"
          },
          "clusterSecret": {
            "value": "[parameters('clusterSecret')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet": {
            "value": "[variables('subnet2Ref')]"
          },
          "templateBaseUrl": {
            "value": "[concat(variables('templateBaseUrl'), 'nested/')]"
          },
          "providerGuid": {
            "value": "[variables('providerGuid')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountNameLoadBalancer')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'virtual-network')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe443')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 5
            },
            "Name": "lbrule443"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe443"
          }
        ]
      }
    }  
  ],
  "outputs": {
    "SplunkURL": {
      "value": "[concat('https://', parameters('domainNamePrefix'), '.', tolower(replace(parameters('location'),' ','')), '.cloudapp.azure.com')]",
      "type": "string"
    }
  }
}